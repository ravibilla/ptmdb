Names Default To Here( 1 );ns = ::GetAddinNamespaceFn();Addin_Name = ns:AddinArray["name"];//::LogUsageFn( "EquipmentStatus" );// The body of the main script begins here//queryString = "Execute spGetEquipmentDetails NULL";/*queryString = "SELECT * FROM batterydata LIMIT 100";dbCon = Create Database Connection( ::GetDSNCredentialsFn("feeis") );dtStatus = Execute SQL( dbCon, queryString, "FE-EIS" );Close Database Connection( dbCon );*/// The include will return an Associative ArraycustomMetadata_aa = Include( "customMetadata.jsl" );// assign variables for the installed add-in's name, build dateaddinName = customMetadata_aa["name"];buildDate = customMetadata_aa["buildDate"];			// Include filesInclude( "$ADDIN_HOME(com.ensurge.tech)\Functions\DateBoxFn.jsl" );//queryString = "SELECT TOP 100 * FROM [ASLDATA].[dbo].[pdata]";// Create a modal dialogNew Window( "Experiment Details by Date",	<<Modal,	V List Box(		Text Box( "Query Experiment Details by Date", <<set font size( 11 ), <<set font style( "bold" ) ),		Text Box( "" ),		H List Box(			Panel Box( "Select Date Range:",				V List Box(					Spacer Box(),					H List Box(						Text Box( "From: ", "" ),						start_date = ::DateBoxFn( Today() - 7 * 24 * 60 * 60 ), // Set to 7 days ago						Text Box( "  ", "" ),						Text Box( "To: ", "" ),						end_date = ::DateBoxFn( Today() ),						Text Box( "  ", "" )					)				)			)		),		H List Box(			Spacer Box( size( 220, 0 ) ),			Button Box( "OK",				sDate = start_date << Get;				eDate = end_date << Get;				//Print( Char( Date( sDate ) ) );				//Print( Char( Date( eDate ) ) );				Print(Format(eDate, "yyyy-mm-dd"));				sDate = Format(sDate, "yyyy-mm-dd");				eDate = Format(eDate, "yyyy-mm-dd");								//queryString = "Execute spGetAllFrontendBatteryDataByDate '" || Char( Short Date( sDate ) ) || "', '" || Char( Short Date( eDate ) ) || "'";				queryString = "CALL spGetAllFrontendBatteryDataByDate('" || sDate || "', '" || eDate || "');";				//queryString = "CALL  spGetAllFrontendBatteryDataByDate ('2024-12-01', '2024-12-03')";				Print( queryString );				dbCon = Create Database Connection( ::GetDSNCredentialsFn("feeis") );				dTable = Execute SQL( dbCon, queryString, "BE-EIS by Date" );				Close Database Connection( dbCon );								// Close all 				//dTable << On Close( Close All( Data Tables, Reports, NoSave ) );			)		)	));/*queryString = "Execute spGetOrgDetails NULL";dbCon = Create Database Connection( ::GetDSNCredentialsFn("ezmes") );dtStatus = Execute SQL( dbCon, queryString, "EZ-MES" );Close Database Connection( dbCon );*///dbCon = Create Database Connection( ::GetDSNCredentialsFn("ezmes") );/*// Create status icon columndtStatus << New Column( "Icon", Expression, Formula( New Image( Open( "$ADDIN_HOME(com.kateeva.tech)\Icons\StatusEQ20x20_" || Status || ".gif", "gif" ) ) ) );dtStatus << Move Selected Columns( {"Icon"}, To First );// Set column widthsTry( Column(dtStatus,"Icon") << Set Display Width(40) );Try( Column(dtStatus,"Status") << Set Display Width(120) );Try( Column(dtStatus,"Alias") << Set Display Width(200) );Try( Column(dtStatus,"EquipmentType") << Set Display Width(180) );Try( Column(dtStatus,"Location") << Set Display Width(120) );Try( Column(dtStatus,"ProcessOwner") << Set Display Width(120) );Try( Column(dtStatus,"EquipmentSupport") << Set Display Width(120) );Try( Column(dtStatus,"FlowDefinition") << Set Display Width(300) );Try( Column(dtStatus,"Blog") << Set Display Width(300) );Try( Column(dtStatus,"iLastUpdate") << Set Display Width(140) );// Set window sizedtStatus << Set Window Size(1200, 800);// Close all //dtStatus << On Close( Close All( Data Tables, Reports, NoSave ) );