
// Use 'PickFile()' to get a list of files to open (Windows only)
file = "";
file = Pick File(
	"Select PL Data files", // Prompt
	//"$DOCUMENTS", // Initial folder
	"\\fileserver\COMMON\Lab\NEWARE\EIS-Screening\",
	{"XLSX Files|xlsx", "All Files|*"}, // List of file filters to apply (ignored by OS/X)
	1, // Initial file filter to apply (index of item in the list above)
	0, // Save flag - Specify either a 'Save' or 'Open' window. Set a value of 1 or 0 respectively.
	Empty(), // Default file
	"Single" // Multiple - If 'Save Flag' = 0, using a value of 1 allows more than one file to be opened (ignored by OS/X)
);

// Exit script if user cancels file pick dialog
If( file == "", Stop() );

// Open file 
dtDipped = Open(file, Worksheets( "Sheet1" ));
dtDipped:Name( "SS Thickness" )  << Data type( Numeric ) << Set Modeling Type( Nominal );
dtDipped:Name( "Date" )  << Data Type(numeric)  << Set Modeling Type( Continuous ) << Format("Locale Date");

// Delete row data where "Screen Result" column has data other than  
dtDipped << Select Where(:"Screen Result" == "pass" | :"Screen Result" == "short" | :"Screen Result" == "leaky"| :"Screen Result" == "open" |:"Screen Result" == "low ocv") << Invert Row Selection << Delete Rows;
dtDipped << Clear Select; 
dtDipped:Name( "key" ) << Set Name( "QuadID" );
dtDipped << Show Window(0);

// Blanks = Stack
For Each Row(
	If(dtDipped:Name( "FormFactor" ) == "", dtDipped:Name( "FormFactor" ) = "Stack");
);

// Summarize Screen Results
dtStackSummary = dtDipped << Summary(
	Output Table Name( "Stacked By SS Thk." ),
	Group( :FormFactor, :Date, :QuadID, :SS Thickness, :Layers),
	N( :Screen Result ),
	Subgroup( :Screen Result ),
	Freq( "None" ),
	Weight( "None" ),
	statistics column name format( "column" )
);

// Rename columns	
dtStackSummary:Name( "Screen Result, pass" ) << Set Name( "# Pass" );	
dtStackSummary:Name( "Screen Result, short" ) << Set Name( "# Short" );	
dtStackSummary:Name( "Screen Result, leaky" ) << Set Name( "# Leaky" );	
dtStackSummary:Name( "Screen Result, low ocv" ) << Set Name( "# Low OCV" );	
dtStackSummary:Name( "Screen Result, open" ) << Set Name( " #Open" );	

// Re-order columns
dtStackSummary << Move Selected Columns( {"# Short"}, after( "# Pass" ) );
dtStackSummary << Move Selected Columns( {"# Leaky"}, after( "# Short" ) );
dtStackSummary << Move Selected Columns( {"# Low OCV"}, after( "# Leaky" ) );
dtStackSummary << Move Selected Columns( {"# Open"}, after( "# Low OCV" ) );

// Create NEW columns with Formula
dtStackSummary << New Column( "Pass [%]", Numeric, "Continuous", Formula( (:Name("# Pass")/:Name("N Rows"))*100 ) );
dtStackSummary:Name( "Pass [%]" ) << Format( "Fixed Dec", 5, 1 );
dtStackSummary << New Column( "Short [%]", Numeric, "Continuous", Formula( (:Name("# Short")/:Name("N Rows"))*100 ) );
dtStackSummary:Name( "Short [%]" ) << Format( "Fixed Dec", 5, 1 );
dtStackSummary << New Column( "Leaky [%]", Numeric, "Continuous", Formula( (:Name("# Leaky")/:Name("N Rows"))*100 ) );
dtStackSummary:Name( "Leaky [%]" ) << Format( "Fixed Dec", 5, 1 );
dtStackSummary << New Column( "Low OCV [%]", Numeric, "Continuous", Formula( (:Name("# Low OCV")/:Name("N Rows"))*100 ) );
dtStackSummary:Name( "Low OCV [%]" ) << Format( "Fixed Dec", 5, 1 );
dtStackSummary << New Column( "Open [%]", Numeric, "Continuous", Formula( (:Name("# Open")/:Name("N Rows"))*100 ) );
dtStackSummary:Name( "Open [%]" ) << Format( "Fixed Dec", 5, 1 );
dtStackSummary << New Column( "Workweek", Numeric, "Nominal", Formula( Week Of Year(:Date) ) );
dtStackSummary << Move Selected Columns( {"Workweek"}, after( "Date" ) );
dtStackSummary << Move Selected Columns( {"Date"}, after( "Workweek" ) );


// Calculate Statistics for Reference Lines in Plots
// 10u: 8-Week Median
median_10u_8week = 0;
Try(
	dtStackSummary << Select Where( :FormFactor == "Stack" & :SS Thickness == 10 &:Date >=  As Date(Today())  - in weeks(8) );
	dtTemp = dtStackSummary << Subset( Output Table Name( "TempSubsetTable" ), Selected Rows( 1 ),  Columns( :Name("Workweek"), :Name("Date"), :Name("QuadID"), :Name( "Pass [%]" ) ) );
	dtStackSummary << Clear Select;
	median_10u_8week = Col Quantile( dtTemp:Name( "Pass [%]"), 0.5 );
	Close( dtTemp, NoSave );
);

// 10u: 2-Week Median
median_10u_2week =0;
Try(
	dtStackSummary << Select Where( :FormFactor == "Stack" & :SS Thickness == 10 & :Date >=  As Date(Today()) - in weeks(2) );
	dtTemp = dtStackSummary << Subset( Output Table Name( "TempSubsetTable" ), Selected Rows( 1 ), Columns( :Name("Workweek"), :Name("Date"), :Name("QuadID"), :Name( "Pass [%]" ) ) );
	dtStackSummary << Clear Select;
	median_10u_2week = Col Quantile( dtTemp:Name( "Pass [%]"), 0.5 );
	Close( dtTemp, NoSave );
);

// 75u: 8-Week Median
median_75u_8week = 0;
Try(
	dtStackSummary << Select Where( :FormFactor == "Stack" & :SS Thickness == 75 &:Date >=  As Date(Today()) - in weeks(8) );
	dtTemp = dtStackSummary << Subset( Output Table Name( "TempSubsetTable" ), Selected Rows( 1 ),  Columns( :Name("Workweek"), :Name("Date"), :Name("QuadID"), :Name( "Pass [%]" ) ) );
	dtStackSummary << Clear Select;
	median_75u_8week = Col Quantile( dtTemp:Name( "Pass [%]"), 0.5 );
	Close( dtTemp, NoSave );
);

// 75u: 2-Week Median
median_75u_2week = 0;
Try(
	dtStackSummary << Select Where( :FormFactor == "Stack" & :SS Thickness == 75 &:Date >=   As Date(Today()) - in weeks(2) );
	dtTemp = dtStackSummary << Subset( Output Table Name( "TempSubsetTable" ), Selected Rows( 1 ),  Columns( :Name("Workweek"), :Name("Date"), :Name("QuadID"), :Name( "Pass [%]" ) ) );
	dtStackSummary << Clear Select;
	median_75u_2week = Col Quantile( dtTemp:Name( "Pass [%]"), 0.5 );
	Close( dtTemp, NoSave );
);

Show( median_10u_8week ); //Show median 
Show( median_10u_2week ); //Show median 
Show( median_75u_8week ); //Show median 
Show( median_75u_2week ); //Show median 
Show(As Date(Today()));

//PLOT: 10u Stacking Yield
dtStackSummary << New Script(
	"PLOT: 10u Stacking Yield",
	Graph Builder(
	Size( 900, 600 ),
	Show Control Panel( 0 ),
	Legend Position( "Bottom" ),
	Variables(
		X( :Workweek ),
		X(
			:QuadID,
			Position( 1 ),
			Order By( :Date, Ascending, Order Statistic( "Mean" ) )
		),
		Y( :"Pass [%]"n ),
		Y( :"Short [%]"n ),
		Y( :"Leaky [%]"n ),
		Y( :"Low OCV [%]"n ),
		Y( :"Open [%]"n )
	),
	Elements(
		Position( 1, 1 ),
		Line( X( 1 ), Y, Legend( 5 ) ),
		Points( X( 1 ), Y, Legend( 6 ) )
	),
	Elements(
		Position( 1, 2 ),
		Line( X( 1 ), Y, Legend( 7 ) ),
		Points( X( 1 ), Y, Legend( 8 ) )
	),
	Elements(
		Position( 1, 3 ),
		Line( X( 1 ), Y, Legend( 9 ) ),
		Points( X( 1 ), Y, Legend( 10 ) )
	),
	Elements(
		Position( 1, 4 ),
		Line( X( 1 ), Y, Legend( 11 ) ),
		Points( X( 1 ), Y, Legend( 12 ) )
	),
	Elements(
		Position( 1, 5 ),
		Line( X( 1 ), Y, Legend( 13 ) ),
		Points( X( 1 ), Y, Legend( 14 ) )
	),
	Local Data Filter(
		Close Outline( 1 ),
		Add Filter(
			columns( :FormFactor, :SS Thickness, :Date ),
			Where( :FormFactor == "Stack" ),
			Where( :SS Thickness == 10 ),
			Where( :Date >=  As Date(Today()) - in weeks(8) )
		)
	),
	SendToReport(
		Dispatch( {}, "Workweek", ScaleBox,
			{Label Row( 1, Label Orientation( "Vertical" ) )}
		),
		Dispatch( {}, "Pass [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Add Ref Line( median_10u_8week, "DashDot", "Red", "8-Wk Median", 1, 1,
					Label Settings(
					{Label Position( "Inside Below" ), Opposite Axis( 0 ), Set Font Size( 12 )}
				)
			), Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "Short [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "Leaky [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "Low OCV [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "Open [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "graph title", TextEditBox,
			{Set Text( "10u Stacking Yield" ), Set Font Size( 14 )}
		),
		Dispatch( {}, "X title", TextEditBox, {Set Font Size( 12 )} ),
		Dispatch( {}, "Y title", TextEditBox, {Set Font Size( 11 )} ),
		Dispatch( {}, "Y 1 title", TextEditBox, {Set Font Size( 11 )} ),
		Dispatch( {}, "Y 2 title", TextEditBox, {Set Font Size( 11 )} ),
		Dispatch( {}, "Y 3 title", TextEditBox, {Set Font Size( 11 )} ),
		Dispatch( {}, "Y 4 title", TextEditBox, {Set Font Size( 11 )} )
	)
));

//PLOT: 75u Stacking Yield
dtStackSummary << New Script(
	"PLOT: 75u Stacking Yield",
	Graph Builder(
	Size( 900, 600 ),
	Show Control Panel( 0 ),
	Legend Position( "Bottom" ),
	Variables(
		X( :Workweek ),
		X(
			:QuadID,
			Position( 1 ),
			Order By( :Date, Ascending, Order Statistic( "Mean" ) )
		),
		Y( :"Pass [%]"n ),
		Y( :"Short [%]"n ),
		Y( :"Leaky [%]"n ),
		Y( :"Low OCV [%]"n ),
		Y( :"Open [%]"n )
	),
	Elements(
		Position( 1, 1 ),
		Line( X( 1 ), Y, Legend( 5 ) ),
		Points( X( 1 ), Y, Legend( 6 ) )
	),
	Elements(
		Position( 1, 2 ),
		Line( X( 1 ), Y, Legend( 7 ) ),
		Points( X( 1 ), Y, Legend( 8 ) )
	),
	Elements(
		Position( 1, 3 ),
		Line( X( 1 ), Y, Legend( 9 ) ),
		Points( X( 1 ), Y, Legend( 10 ) )
	),
	Elements(
		Position( 1, 4 ),
		Line( X( 1 ), Y, Legend( 11 ) ),
		Points( X( 1 ), Y, Legend( 12 ) )
	),
	Elements(
		Position( 1, 5 ),
		Line( X( 1 ), Y, Legend( 13 ) ),
		Points( X( 1 ), Y, Legend( 14 ) )
	),
	Local Data Filter(
		Close Outline( 1 ),
		Add Filter(
			columns( :FormFactor, :SS Thickness, :Date ),
			Where( :FormFactor == "Stack" ),
			Where( :SS Thickness == 75 ),
			Where( :Date >=  As Date(Today()) - in weeks(8) )
		)
	),
	SendToReport(
		Dispatch( {}, "Workweek", ScaleBox,
			{Label Row( 1, Label Orientation( "Vertical" ) )}
		),
		Dispatch( {}, "Pass [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Add Ref Line( median_75u_8week, "DashDot", "Red", "8-Wk Median", 1, 1,
					Label Settings(
					{Label Position( "Inside Below" ), Opposite Axis( 0 ), Set Font Size( 12 )}
				)
			), Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "Short [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "Leaky [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "Low OCV [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "Open [%]", ScaleBox,
			{Min( -5 ), Max( 110 ), Inc( 20 ), Minor Ticks( 1 ),
			Label Row( Set Font Size( 8 ) )}
		),
		Dispatch( {}, "graph title", TextEditBox,
			{Set Text( "75u Stacking Yield" ), Set Font Size( 14 )}
		),
		Dispatch( {}, "X title", TextEditBox, {Set Font Size( 12 )} ),
		Dispatch( {}, "Y title", TextEditBox, {Set Font Size( 11 )} ),
		Dispatch( {}, "Y 1 title", TextEditBox, {Set Font Size( 11 )} ),
		Dispatch( {}, "Y 2 title", TextEditBox, {Set Font Size( 11 )} ),
		Dispatch( {}, "Y 3 title", TextEditBox, {Set Font Size( 11 )} ),
		Dispatch( {}, "Y 4 title", TextEditBox, {Set Font Size( 11 )} )
	)
));

// Evaluate data table scripts
Eval( dtStackSummary << Get Table Property( "PLOT: 10u Stacking Yield" ) );
Eval( dtStackSummary << Get Table Property( "PLOT: 75u Stacking Yield" ) );

// Close all 
dtStackSummary << On Close( Close All( Data Tables, Reports, NoSave ) );
